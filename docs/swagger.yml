---
openapi: 3.0.0
info:
  title: EasyTex API
  description: Документация по API EasyTex
  version: 0.1.9
servers:
  - url: https://smartlectures.ru/api/v1
    description: Main server
  - url: http://localhost:8080/api/v1
    description: Localhost server


paths:
  /notes:
    post:
      security:
        - cookieAuth: ["session"]
      summary: Создание заметки
      description: Создание заметки
      responses:
        '200':
          description: Ответ при успешном создании заметки
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteCreationResponse'
        '400':
          description: Ответ при неккоректном запросе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Ответ для не авторизованного пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Ответ при ошибке на стороне сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
      tags: [notes]
  /notes/overview:
    get:
      security:
        - cookieAuth: ["session"]
      summary: Получение заметок для отображения структуры
      description: Получение информации о заметка для отображения превью
      responses:
        '200':
          description: Ответ при успешном выполнении запроса.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotesOverview'
        '400':
          description: Ответ при неккоректном запросе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Ответ, если у пользователя не достаточно прав для совершения действия над объектом
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Ответ для не авторизованного пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Ответ при ошибке на стороне сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags: [notes]
  /notes/{noteId}:
    get:
      security:
        - cookieAuth: ["session"]
      parameters:
        - in: path
          name: noteId
          schema:
            type: integer
          required: true
          description: Числовой идентификатор заметки
      summary: Получение заметки по ID
      description: Получение заметки.
      responses:
        '200':
          description: Ответ при успешном запросе возвращается объект заметки с запрошенным
            идентификатором
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        '400':
          description: Ответ при неккоректном запросе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Ответ для не авторизованного пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Ответ, если у пользователя не достаточно прав для совершения действия над объектом
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Ответ при запросе заметки с несуществующим ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Ответ при ошибке на стороне сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags: [notes]
    put:
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: noteId
          schema:
            type: integer
          required: true
          description: Числовой идентификатор заметки
      summary: Обновление заметки по ID
      description: Обновление заметки.
      responses:
        '204':
          description: Ответ при успешном запросе
        '400':
          description: Ответ при неккоректном запросе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Ответ для не авторизованного пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Ответ при попытке обновления не существующей заметки
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Ответ, если у пользователя не достаточно прав для совершения действия над объектом
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Ответ при ошибке на стороне сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
      tags: [notes]
    delete:
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: noteId
          schema:
            type: integer
          required: true
          description: Числовой идентификатор заметки
      summary: Удаление заметки по ID
      description: Удаление заметки.
      responses:
        '204':
          description: Ответ при успешном удалении заметки
        '400':
          description: Ответ при неккоректном запросе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Ответ для не авторизованного пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Ответ, если у пользователя не достаточно прав для совершения действия над объектом
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Ответ при ошибке на стороне сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags: [notes]
  /notes/{noteId}/download/md:
    get:
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: noteId
          schema:
            type: integer
          required: true
          description: Числовой идентификатор заметки
      summary: Получение заметки в виде md файла
      responses:
        '200':
          description: Ответом является MD файл
          content:
            text/markdown:
              schema:
                type: string
                format: binary
        '400':
          description: Ответ при неккоректном запросе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Ответ для не авторизованного пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Ответ, если у пользователя не достаточно прав для совершения действия над объектом
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Ответ при запросе файла, которого не существует
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description:  Ответ при ошибке на стороне сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags: [notes]
        
  /notes/{noteId}/download/pdf:
    get:
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: noteId
          schema:
            type: integer
          required: true
          description: Числовой идентификатор заметки
      summary: Получение заметки в виде pdf файла
      responses:
        '200':
          description: Ответом является PDF файл
          content:
            text/markdown:
              schema:
                type: string
                format: binary
        '400':
          description: Ответ при неккоректном запросе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Ответ для не авторизованного пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Ответ при запросе файла, которого не существует
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Ответ, если у пользователя не достаточно прав для совершения действия над объектом
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Ответ при ошибке на стороне сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags: [notes]
  /notes/search:
    post:
      security:
        - cookieAuth: []
      summary: Поиск заметок
      responses:
        '200':
          description: Ответ при успешном поиске
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteSearchResponse'
        '400':
          description: Ответ при неккоректном запросе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Ответ для не авторизованного пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Ответ при ошибке на стороне сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
      tags: [notes]
  /dirs:
    post:
      security:
        - cookieAuth: []
      summary: Создание папки
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dir'
      responses:
        '200':
          description: Ответ при успешном выполнении запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirCreationResponse'
        '400':
          description: Ответ при неккоректном запросе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Ответ для не авторизованного пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Ответ при ошибке на стороне сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags: [dirs]
  /dirs/{dirId}:
    get:
      summary: Получение папки по ID
      parameters:
        - in: path
          name: dirId
          schema:
            type: integer
          required: true
          description: Числовой идентификатор папки
      responses:
        '200':
          description: Ответ при успешном выполнении запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dir'
        '400':
          description: Ответ при неккоректном запросе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Ответ для не авторизованного пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Ответ, если у пользователя не достаточно прав для совершения действия над объектом
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Ответ при ошибке на стороне сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Ответ при ошибке на стороне сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags: [dirs]
    put:
      summary: Обновление папки по ID
      parameters:
        - in: path
          name: dirId
          schema:
            type: integer
          required: true
          description: Числовой идентификатор папки
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dir'
      responses:
        '204':
          description: Ответ при успешном выполнении запроса
        '400':
          description: Ответ при неккоректном запросе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Ответ для не авторизованного пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Ответ, если у пользователя не достаточно прав для совершения действия над объектом
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Ответ при ошибке на стороне сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags: [dirs]
    delete:
      parameters:
        - in: path
          name: dirId
          schema:
            type: integer
          required: true
          description: Числовой идентификатор папки
      summary: Удаление папки по ID
      responses:
        '204':
          description: Ответ при успешном удалении папки
        '400':
          description: Ответ при неккоректном запросе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Ответ для не авторизованного пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Ответ, если у пользователя не достаточно прав для совершения действия над объектом
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Ответ при ошибке на стороне сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags: [dirs]
  /dirs/overview:
    get:
      summary: Получение структры папок пользователя
      description: Получение структры папок пользователя для отображения структуры
        файлов/папок
      responses:
        '200':
          description: Ответ при успешном выполнении запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirsOverview'
        '400':
          description: Ответ при неккоректном запросе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Ответ для не авторизованного пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Ответ при ошибке на стороне сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags: [dirs]
  /images/upload:
    post:
      responses:
        '200':
          description: Ответ при успешном выполнении запроса
          content:
            application/json:
              schema:
                type: object
                properties:
                  src:
                    type: string
        '500':
          description: Ответ при ошибке на стороне сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      tags: [images]
  /recognizer/formula:
    post:
      responses:
        '200':
          description: Ответ при успешном выполнении запроса
          content:
            application/json:
              schema:
                type: object
                properties:
                  text:
                    type: string
        '500':
          description: Ответ при ошибке на стороне сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      tags: [recognizer]
  /recognizer/text:
    post:
      responses:
        '200':
          description: Ответ при успешном выполнении запроса
          content:
            application/json:
              schema:
                type: object
                properties:
                  text:
                    type: string
        '500':
          description: Ответ при ошибке на стороне сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                images:
                  type: array
                  items:
                    type: string
                    format: binary
      tags: [recognizer]
  /recognizer/pdf:
    post:
      responses:
        '200':
          description: Ответ при успешном выполнении запроса
          content:
            application/json:
              schema:
                type: object
                properties:
                  text:
                    type: string
        '500':
          description: Ответ при ошибке на стороне сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                data:
                  type: string
                  format: binary
      tags: [recognizer]
  /recognizer/mixed:
    post:
      responses:
        '200':
          description: Ответ при успешном выполнении запроса
          content:
            application/json:
              schema:
                type: object
                properties:
                  text:
                    type: string
        '500':
          description: Ответ при ошибке на стороне сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                images:
                  type: array
                  items:
                    type: string
                    format: binary
      tags: [recognizer]
  /snippets:
    get:
      summary: Получение списка сниппетов
      description: Получение списка сниппетов
      responses:
        '200':
          description: Ответ при успешном получнии списка сниппетов
          content:
            application/json:
              schema:
                type: object
                properties:
                  snippets:
                    type: array
                    items:
                      $ref: '#/components/schemas/Snippet'
                required: [snippets]
        '500':
          description: Ответ при ошибке на стороне сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags: [snippets]

  /snippets/search:
    post:
      summary: Поиск сниппетов
      responses:
        '200':
          description: Ответ при успешном поиске
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Snippet'
        '500':
          description: Ответ при ошибке на стороне сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
      tags: [snippets]
  /auth/login:
    post:
      summary: Авторизация пользователя
      responses:
        '204':
          description: Ответ при успешном поиске
          headers: 
            Set-Cookie:
              schema: 
                type: string
                example: session=abcde12345; Path=/; HttpOnly
        '400':
          description: Ответ, при неверной почте или пароле
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Ответ при ошибке на стороне сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      tags: [auth]
  /auth/register:
    put:
      summary: Регистрация пользователя
      responses:
        '200':
          description: Ответ при успешном поиске
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Snippet'
        '409':
          description: Ответ, если такой пользователь уже существует
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Ответ при ошибке на стороне сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      tags: [auth]
  /auth/logout:
    delete:
      summary: Удаление текущей авторизационной сессии
      responses:
        '204':
          description: Ответ при успешном удалении сессии
        '500':
          description: Ответ при ошибке на стороне сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags: [auth]
  /auth/me:
    get:
      summary: Получение информации о текущем пользователе
      responses:
        '200':
          description: Ответ при успешном поиске
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        '401':
          description: Ответ для не авторизованного пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Ответ при ошибке на стороне сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags: [auth]
components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: session
 
  schemas:
    GetSnippetsResponse:
      type: object
      properties:
        snippets:
          type: array
          items:
            $ref: '#/components/schemas/Snippet'
      required: [snippets]
    Snippet:
      type: object
      properties:
        snippetId:
          type: number
          format: int32
          example: 1
          x-isnullable: false
        name:
          type: string
          description: Название сниппета
          example: integral
          x-isnullable: false
        description:
          type: string
          description: Описание сниппета
          example: Определенный интеграл
          x-isnullable: false
        body:
          type: string
          description: Тело сниппета
          example: '```$$\alpha$$```'
          x-isnullable: false
        userId:
          type: number
          description: ID владельца сниппета
          format: int32
          example: 1
          x-isnullable: false
      required: [snippetId, name, description, body, userId]
    NoteSearchResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/NoteSearchItem'
      required: [items]
    NoteSearchItem:
      properties:
        noteId:
          type: number
          format: int32
          example: 1
          x-isnullable: false
        name:
          type: string
          description: Название заметки
          example: TestName
          x-isnullable: false
        bodyHighlight:
          type: array
          items:
            type: string
        nameHighlight:
          type: array
          items:
            type: string
      required: [noteId, name, bodyHighlight, nameHighlight]
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          description: Электронная почта
          example: default@default.ru
          x-isnullable: false
        password:
          type: string
          description: Пароль
          example: secret
          x-isnullable: false
      required: [email, password]
    RegisterRequest:
      type: object
      properties:
        email:
          type: string
          description: Электронная почта
          example: default@default.ru
          x-isnullable: false
        password:
          type: string
          description: Пароль
          example: secret
          x-isnullable: false
        name:
          type: string
          description: имя пользователя
          example: name
          x-isnullable: false
        surname:
          type: string
          description: фамилия пользователя
          example: surname
          x-isnullable: false
        username:
          type: string
          description: ник пользователя
          example: username
          x-isnullable: false
      required: [email, password, username]
    UserInfo:
      type: object
      properties:
        email:
          type: string
          description: Электронная почта
          example: default@default.ru
          x-isnullable: false
        password:
          type: string
          description: Пароль
          example: secret
          x-isnullable: false
        name:
          type: string
          description: имя пользователя
          example: name
          x-isnullable: false
        surname:
          type: string
          description: фамилия пользователя
          example: surname
          x-isnullable: false
        username:
          type: string
          description: ник пользователя
          example: username
          x-isnullable: false
      required: [email, password, username]
    SearchRequest:
      type: object
      properties:
        query:
          type: string
          description: Поисковый запрос
          example: Новая заметка
          x-isnullable: false
      required: [query]
    Dir:
      type: object
      properties:
        dirId:
          type: number
          format: int32
          description: Числовой идентификатор папки
          example: 1337
          x-isnullable: false
        name:
          type: string
          description: Название папки
          example: TestName
          x-isnullable: false
        userId:
          type: number
          format: int32
          description: Числовой идентификатор создателя папки
          example: 1337
          x-isnullable: false
        parentDir:
          type: number
          format: int32
          description: Числовой идентификатор родительской папки
          example: 1337
          x-isnullable: false
        iconUrl:
          type: string
          description: Ссылка на URL иконки
          example: ''
          x-isnullable: false
        subdirs:
          x-isnullable: true
          type: array
          items:
            $ref: '#/components/schemas/Dir'
    Note:
      type: object
      properties:
        noteId:
          type: number
          format: int32
          description: ID заметки
          example: 1
          x-isnullable: false
        name:
          type: string
          description: |
            Заголовок заметки
          example: Test header
        body:
          type: string
          description: |
            Тело заметки в формате, который понимает редактор
          example: Test body
        createdAt:
          type: string
          format: date-time
          description: Дата создания заметки.
          example: 2017-01-01T00:00:00Z
        lastUpdate:
          type: string
          format: date-time
          description: Дата последенго изменения заметки.
          example: 2017-01-01T00:00:00Z
        parentDir:
          type: number
          format: int32
          description: ID папки, которой принадлежит заметка
          x-isnullable: false
          example: 1
        userId:
          type: number
          format: int32
          description: ID пользователя, которому принадлежит заметка
          example: 1
          x-isnullable: false
    NotePreview:
      type: object
      properties:
        noteId:
          type: number
          format: int32
          description: ID заметки
          example: 1337
          x-isnullable: false
        name:
          type: string
          description: |
            Заголовок заметки
          example: Test header
        parentDir:
          type: number
          format: int32
          description: ID папки, которой принадлежит заметка
          x-isnullable: false
          example: 1337
      required: [noteId, name, parentDir]
    NoteCreationResponse:
      type: object
      properties:
        noteId:
          type: number
          format: int32
          description: ID заметки
          example: 1337
      required: [noteId]
    DirCreationResponse:
      type: object
      properties:
        dirId:
          type: number
          format: int32
          description: ID папки
          example: 1337
      required: [noteId]
    Error:
      type: object
      properties:
        msg:
          type: string
          description: Текстовое описание ошибки
          example: note with this id not found
      required: [msg]
    NotesOverview:
      type: object
      properties:
        notes:
          type: array
          items:
            $ref: '#/components/schemas/NotePreview'
    DirsOverview:
      type: object
      properties:
        dirs:
          type: array
          items:
            $ref: '#/components/schemas/Dir'
